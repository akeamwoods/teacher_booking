{"version":3,"sources":["store/actions.ts","helpers/getLessonColour.ts","helpers/getDayAsNumber.ts","store/index.ts","handlers/AvailabilityHandler/style.tsx","helpers/getDayColour.ts","helpers/getDayTextColour.ts","components/Timeline/DayTimeline/style.tsx","components/Timeline/DayTimeline/index.tsx","components/Timeline/MonthTimeline/style.tsx","components/Timeline/MonthTimeline/index.tsx","components/Timeline/style.tsx","components/Timeline/TimelineHeader/style.tsx","components/Popup/style.tsx","hooks/useKeyboardEvent.ts","constants.ts","components/Popup/index.tsx","hooks/useScrollLock.ts","components/DatePicker/style.tsx","components/DatePicker/Date/style.tsx","components/DatePicker/Date/index.tsx","components/DatePicker/Controls/style.tsx","components/DatePicker/Controls/index.tsx","components/DatePicker/DatePickerButton/style.tsx","components/DatePicker/DatePickerButton/index.tsx","components/DatePicker/index.tsx","hooks/useOutsideClick.ts","components/Forms/style.tsx","components/Forms/Controls/style.tsx","components/Forms/Controls/StartEndTime.tsx","helpers/getTimeSlots.ts","components/Forms/Controls/ClassAndSeries.tsx","components/Forms/Controls/MultiCheckbox.tsx","components/Forms/NewLessonForm.tsx","components/Timeline/TimelineHeader/index.tsx","components/Timeline/index.tsx","components/Schedule/style.tsx","components/Schedule/Axis.tsx","components/Schedule/Lesson.tsx","components/Schedule/GridLines.tsx","components/Schedule/DropContainers.tsx","components/Schedule/index.tsx","components/InformationBar/style.tsx","components/Forms/EditLessonForm.tsx","components/Forms/SeriesForm.tsx","components/InformationBar/index.tsx","handlers/AvailabilityHandler/SideBar/index.tsx","handlers/AvailabilityHandler/index.tsx","components/SideMenu/style.tsx","components/SideMenu/index.tsx","index.tsx"],"names":["selectedMonthChanged","createAction","selectedDayChanged","newLessonCreated","newSeriesCreated","lessonEdited","lessonEditedSeriesAdded","lessonDeleted","lessonFocussed","lessonUnfocussed","actions","infoPanelClosed","closePanelButtonPressed","popupOpened","popupClosed","updateStartTime","seriesDeleted","getLessonColour","coloursInUse","colourScheme","combinedColours","shuffleArray","frequencies","reduce","obj","val","sortedFrequencies","Object","keys","sort","a","b","length","array","i","j","Math","floor","random","getDayAsNumber","day","dayInLowercase","toLowerCase","persistConfig","key","storage","blacklist","initialState","selectedDate","startOfDay","Date","toISOString","lessons","id","teacherId","subject","start","end","class","color","classes","year","group","students","focussedLesson","undefined","infoPanelOpen","popupOpen","infoPanelColor","persistedReducer","persistReducer","state","action","produce","draft","type","getType","setMonth","getMonth","payload","lesson","map","days","series","startDayNumber","getDay","startTime","format","endTime","daysToAdd","entries","forEach","entry","x","nextDay","addDays","isBefore","isSameDay","push","uuidv4","setHours","parseFloat","setMinutes","slice","seriesId","oldKey","filter","date","newKey","time","find","l","difference","differenceInMinutes","addMinutes","store","createStore","composeWithDevTools","useTypedSelector","persistStore","useSelector","Wrapper","styled","div","getDayColour","dayAsNumber","includes","getDayTextColour","DayTimelineWrapper","DayWrapper","attrs","props","style","borderBottomColor","isCurrentDay","Day","button","background","boxShadow","DayText","p","DayTimeline","React","memo","startOfMonth","daysInMonth","getDaysInMonth","Array","from","_","index","dispatch","useDispatch","ref","createRef","useEffect","setTimeout","current","scrollIntoView","behavior","block","inline","onClick","MonthTimelineWrapper","MonthWrapper","fontWeight","isCurrentMonth","MonthTimeline","startOfYear","months","addMonths","month","Month","isSameMonth","Fade","RightFade","Header","header","ButtonBase","ResetButton","AddButton","animated","Container","CloseButton","useKeyboardEvent","callback","handler","event","window","addEventListener","removeEventListener","constants","Popup","isLocked","isVisible","children","scrollLock","document","body","overflow","transitions","useTransition","opacity","enter","leave","unique","config","duration","transitions2","transform","ReactDOM","createPortal","item","e","stopPropagation","isSelected","isDate","DateText","differentMonth","isHeading","heading","TransparentButton","Controls","left","right","preventDefault","Button","DatePickerButton","DatePicker","changeDate","close","setOpen","isOpen","singleClick","useState","setDate","padding","paddingDays","futureDays","handleClick","prevDays","fill","subDays","endOfMonth","subMonths","nextDays","sameMonth","listener","contains","target","useOutsideClick","useCallback","SeriesContainer","span","Form","form","Input","input","SubmitButton","select","ListWrapper","SeriesSpan","SeriesRow","Select","CheckBoxContainer","StartEndTime","setStartTime","setEndTime","options","interval","times","hh","mm","getTimeSlots","display","marginTop","value","indexOf","onChange","selectedIndex","disabled","option","ClassAndSeriesControls","setSeries","classGroup","setClassGroup","classOptions","alignItems","flex","marginLeft","border","checked","MultiCheckbox","checkboxState","setCheckbox","monday","tuesday","wednesday","thursday","friday","NewLessonForm","initialDate","seriesStartOpen","setSeriesStartOpen","seriesEndOpen","setSeriesEndOpen","seriesStart","setSeriesStart","addWeeks","seriesEnd","setSeriesEnd","updateSubject","margin","height","src","process","alt","onSubmit","placeholder","values","TimelineHeader","setVisibility","title","Timeline","yearStart","monthStart","AxisWrapper","GridContainer","Tick","Rect","rect","LessonWrapper","colour","smallHeight","SubjectText","h4","TimeText","Axis","scale","tickHeight","range","maxNumber","max","ticks","error","tick","toFixed","Lesson","isFocussed","useDrag","collect","monitor","isDragging","drag","tabIndex","currentTarget","zIndex","differenceInHours","GridLines","DropContainers","startHeight","endHeight","containerHeight","DropContainer","borderTop","setBorderTop","useDrop","drop","didDrop","canDrop","getItem","accept","isOver","position","width","Schedule","scaleTime","domain","ButtonBar","Section","Heading","h2","SubHeading","LinkedButton","isLinked","ButtonSpan","EditLessonForm","c","SeriesForm","prototype","concat","apply","dateA","dateB","getTime","last","reverse","first","size","CellMeasurerCache","fixedWidth","defaultHeight","cache","rowCount","renderRow","parent","columnIndex","rowIndex","justifyContent","marginBottom","containerStyle","deferredMeasurementCache","rowHeight","rowRenderer","overscanRowCount","InformationBar","mode","setMode","isPopupOpen","yearGroup","SideBar","AvailabilityHandler","nav","Link","NavLink","SideMenu","exact","to","activeStyle","App","className","path","component","rootElement","getElementById","render","basename","DndProvider","backend","HTML5Backend"],"mappings":"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","file":"static/js/main.a67e11b3.chunk.js","sourcesContent":["import { ActionType, createAction } from \"typesafe-actions\";\nimport { Lesson } from \"./types\";\n\nconst selectedMonthChanged = createAction(\"selected month changed\")<Date>();\nconst selectedDayChanged = createAction(\"selected day changed\")<Date>();\nconst newLessonCreated = createAction(\"new lesson created\")<Lesson>();\nconst newSeriesCreated = createAction(\"new series created\")<{\n  lesson: Omit<Lesson, \"color\" | \"id\">;\n  series: {\n    start: Date;\n    end: Date;\n    days: {\n      monday: boolean;\n      tuesday: boolean;\n      wednesday: boolean;\n      thursday: boolean;\n      friday: boolean;\n    };\n  };\n}>();\nconst lessonEdited = createAction(\"lesson edited\")<{\n  lesson: Lesson;\n  oldKey: string;\n}>();\nconst lessonEditedSeriesAdded = createAction(\n  \"lesson edited with series added\"\n)<{\n  lesson: Lesson;\n  oldKey: string;\n  series: {\n    start: Date;\n    end: Date;\n    days: {\n      monday: boolean;\n      tuesday: boolean;\n      wednesday: boolean;\n      thursday: boolean;\n      friday: boolean;\n    };\n  };\n}>();\n\nconst lessonDeleted = createAction(\"lesson deleted\")<{\n  date: string;\n  id: string;\n}>();\nconst lessonFocussed = createAction(\"lesson focussed\")<Lesson>();\nconst lessonUnfocussed = createAction(\"lesson unfocussed\")();\nconst infoPanelClosed = createAction(\"info panel closed\")();\nconst closePanelButtonPressed = createAction(\"close panel button pressed\")();\nconst popupOpened = createAction(\"popup opened\")();\nconst popupClosed = createAction(\"popup closed\")();\n\nconst updateStartTime = createAction(\"lesson start time updated\")<{\n  id: string;\n  time: string;\n}>();\n\nconst seriesDeleted = createAction(\"series deleted\")<string>();\n\nexport const actions = {\n  selectedMonthChanged,\n  selectedDayChanged,\n  newLessonCreated,\n  newSeriesCreated,\n  lessonEdited,\n  lessonDeleted,\n  lessonFocussed,\n  infoPanelClosed,\n  lessonUnfocussed,\n  closePanelButtonPressed,\n  lessonEditedSeriesAdded,\n  popupOpened,\n  popupClosed,\n  updateStartTime,\n  seriesDeleted,\n};\n\nexport type Actions = ActionType<typeof actions>;\n","export const getLessonColour = (coloursInUse: string[] | undefined): string => {\n  // this method is used to select the color for each lesson object in such a way that duplicate colours are rare.\n\n  const colourScheme = [\n    \"#f3225a\",\n    \"#22b7f3\",\n    \"#f3ab22\",\n    \"#3eb764\",\n    \"#4E22F3\",\n    \"#F32222\",\n    \"#F32293\",\n    \"#9B22F3\",\n  ];\n\n  //find element frequencies\n  const combinedColours = coloursInUse\n    ? [...coloursInUse, ...colourScheme]\n    : colourScheme;\n\n  shuffleArray(combinedColours);\n  const frequencies: { [key: string]: number } = combinedColours.reduce(\n    function (obj: { [key: string]: number }, val) {\n      obj[val] = (obj[val] || 0) + 1;\n      return obj;\n    },\n    {}\n  );\n\n  //sort keys by count\n  const sortedFrequencies = Object.keys(frequencies).sort(function (\n    a: string,\n    b: string\n  ) {\n    return frequencies[b] - frequencies[a];\n  });\n\n  // return least common colour string\n  return sortedFrequencies[sortedFrequencies.length - 1];\n};\n\nconst shuffleArray = (array: any[]): void => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};\n","export const getDayAsNumber = (day: string): number => {\n  const dayInLowercase = day.toLowerCase();\n  if (dayInLowercase === \"monday\") {\n    return 1;\n  } else if (dayInLowercase === \"tuesday\") {\n    return 2;\n  } else if (dayInLowercase === \"wednesday\") {\n    return 3;\n  } else if (dayInLowercase === \"thursday\") {\n    return 4;\n  } else if (dayInLowercase === \"friday\") {\n    return 5;\n  } else if (dayInLowercase === \"saturday\") {\n    return 6;\n  } else {\n    return 0;\n  }\n};\n","import { Actions, actions } from \"./actions\";\nimport { Reducer, createStore } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport {\n  setMonth,\n  getMonth,\n  startOfDay,\n  getDay,\n  addDays,\n  isBefore,\n  isSameDay,\n  format,\n  differenceInMinutes,\n  addMinutes,\n} from \"date-fns\";\nimport { Lesson, Class } from \"./types\";\nimport { getLessonColour } from \"../helpers/getLessonColour\";\nimport { getDayAsNumber } from \"../helpers/getDayAsNumber\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\n    \"selectedDate\",\n    \"lessons\",\n    \"classes\",\n    \"focussedLesson\",\n    \"infoPanelOpen\",\n    \"popupOpen\",\n  ],\n};\n\nconst initialState = () => ({\n  selectedDate: startOfDay(new Date()).toISOString(),\n  lessons: {\n    \"2020-07-19T23:00:00.000Z\": [\n      {\n        id: \"f949d4f0-b121-4137-bbab-8e8e2cd2b312\",\n        teacherId: \"01\",\n        subject: \"English\",\n        start: \"2020-07-20T07:30:00.000Z\",\n        end: \"2020-07-20T08:30:00.000Z\",\n        class: \"01\",\n        color: \"#f3225a\",\n      },\n      {\n        id: \"114fc19c-d081-4ec6-91e3-8628d074939a\",\n        teacherId: \"01\",\n        subject: \"French\",\n        start: \"2020-07-20T10:30:00.000Z\",\n        end: \"2020-07-20T11:30:00.000Z\",\n        class: \"01\",\n        color: \"#22b7f3\",\n      },\n      {\n        id: \"850364f0-33eb-4400-a4a4-a9ebbd2650bf\",\n        teacherId: \"01\",\n        subject: \"English\",\n        start: \"2020-07-20T11:45:00.000Z\",\n        end: \"2020-07-20T13:00:00.000Z\",\n        class: \"01\",\n        color: \"#f3ab22\",\n      },\n    ],\n  } as { [key: string]: Lesson[] },\n  classes: [{ id: \"01\", year: 7, group: \"A\", students: [] }] as Class[],\n  focussedLesson: undefined as undefined | Lesson,\n  infoPanelOpen: false,\n  popupOpen: false,\n  infoPanelColor: undefined as string | undefined,\n});\n\nexport type State = Readonly<ReturnType<typeof initialState>>;\n\nexport const rootReducer: Reducer<State, Actions> = (\n  state = initialState(),\n  action: Actions\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.selectedMonthChanged):\n        draft.selectedDate = setMonth(\n          new Date(draft.selectedDate),\n          getMonth(action.payload)\n        ).toISOString();\n        break;\n      case getType(actions.selectedDayChanged):\n        draft.selectedDate = new Date(action.payload).toISOString();\n        break;\n      case getType(actions.newLessonCreated): {\n        const key = startOfDay(new Date(action.payload.start)).toISOString();\n        const lesson = {\n          ...action.payload,\n          color: getLessonColour(\n            draft.lessons[key]\n              ? draft.lessons[key].map((lesson) => lesson.color)\n              : []\n          ),\n        };\n        draft.lessons[key]\n          ? (draft.lessons[key] = [...draft.lessons[key], lesson])\n          : (draft.lessons[key] = [lesson]);\n        break;\n      }\n      case getType(actions.newSeriesCreated): {\n        const days = action.payload.series.days;\n        const start = action.payload.series.start;\n        const end = action.payload.series.end;\n        const startDayNumber = getDay(start);\n        const startTime = `${format(\n          new Date(action.payload.lesson.start),\n          \"HH\"\n        )}:${format(new Date(action.payload.lesson.start), \"mm\")}`;\n        const endTime = `${format(\n          new Date(action.payload.lesson.end),\n          \"HH\"\n        )}:${format(new Date(action.payload.lesson.end), \"mm\")}`;\n        let daysToAdd: Date[] = [];\n\n        Object.entries(days).forEach((entry) => {\n          if (entry[1]) {\n            const dayOfWeek = getDayAsNumber(entry[0]);\n            const x = (dayOfWeek - startDayNumber + 7) % 7;\n            let nextDay = addDays(start, x);\n            while (isBefore(nextDay, end) || isSameDay(nextDay, end)) {\n              daysToAdd.push(nextDay);\n              nextDay = addDays(nextDay, 7);\n            }\n          }\n        });\n\n        daysToAdd.forEach((day) => {\n          const key = startOfDay(day).toISOString();\n\n          const lesson = {\n            ...action.payload.lesson,\n            id: uuidv4(),\n            start: new Date(\n              new Date(day.setHours(parseFloat(startTime))).setMinutes(\n                parseFloat(startTime.slice(-2))\n              )\n            ).toISOString(),\n            end: new Date(\n              new Date(day.setHours(parseFloat(endTime))).setMinutes(\n                parseFloat(endTime.slice(-2))\n              )\n            ).toISOString(),\n            color: getLessonColour(\n              draft.lessons[key]\n                ? draft.lessons[key].map((lesson) => lesson.color)\n                : []\n            ),\n          };\n\n          draft.lessons[key]\n            ? (draft.lessons[key] = [...draft.lessons[key], lesson])\n            : (draft.lessons[key] = [lesson]);\n        });\n\n        break;\n      }\n      case getType(actions.lessonEditedSeriesAdded): {\n        const seriesId = uuidv4();\n        const days = action.payload.series.days;\n        const start = action.payload.series.start;\n        const end = action.payload.series.end;\n        const startDayNumber = getDay(start);\n        const startTime = `${format(\n          new Date(action.payload.lesson.start),\n          \"HH\"\n        )}:${format(new Date(action.payload.lesson.start), \"mm\")}`;\n        const endTime = `${format(\n          new Date(action.payload.lesson.end),\n          \"HH\"\n        )}:${format(new Date(action.payload.lesson.end), \"mm\")}`;\n        let daysToAdd: Date[] = [];\n\n        draft.lessons[action.payload.oldKey] = [\n          ...draft.lessons[action.payload.oldKey].filter(\n            (lesson) => lesson.id !== action.payload.lesson.id\n          ),\n        ];\n\n        Object.entries(days).forEach((entry) => {\n          if (entry[1]) {\n            const dayOfWeek = getDayAsNumber(entry[0]);\n            const x = (dayOfWeek - startDayNumber + 7) % 7;\n            let nextDay = addDays(start, x);\n            while (isBefore(nextDay, end) || isSameDay(nextDay, end)) {\n              daysToAdd.push(nextDay);\n              nextDay = addDays(nextDay, 7);\n            }\n          }\n        });\n\n        daysToAdd.forEach((day) => {\n          const key = startOfDay(day).toISOString();\n\n          const lesson = {\n            ...action.payload.lesson,\n            seriesId: action.payload.lesson.seriesId\n              ? action.payload.lesson.seriesId\n              : seriesId,\n            id: uuidv4(),\n            start: new Date(\n              new Date(day.setHours(parseFloat(startTime))).setMinutes(\n                parseFloat(startTime.slice(-2))\n              )\n            ).toISOString(),\n            end: new Date(\n              new Date(day.setHours(parseFloat(endTime))).setMinutes(\n                parseFloat(endTime.slice(-2))\n              )\n            ).toISOString(),\n            color: getLessonColour(\n              draft.lessons[key]\n                ? draft.lessons[key].map((lesson) => lesson.color)\n                : []\n            ),\n          };\n\n          draft.lessons[key]\n            ? (draft.lessons[key] = [...draft.lessons[key], lesson])\n            : (draft.lessons[key] = [lesson]);\n        });\n\n        break;\n      }\n      case getType(actions.lessonDeleted):\n        draft.lessons[action.payload.date] = [\n          ...draft.lessons[action.payload.date].filter(\n            (lesson) => lesson.id !== action.payload.id\n          ),\n        ];\n\n        if (!draft.lessons[action.payload.date].length)\n          delete draft.lessons[action.payload.date]; // remove key if it has no values\n\n        if (\n          draft.focussedLesson &&\n          draft.focussedLesson.id === action.payload.id\n        )\n          draft.focussedLesson = undefined; // if deleted item is focussed, removed\n        break;\n      case getType(actions.lessonFocussed):\n        draft.focussedLesson = action.payload;\n        draft.infoPanelColor = action.payload.color;\n        draft.infoPanelOpen = true;\n        break;\n      case getType(actions.lessonUnfocussed):\n        draft.focussedLesson = undefined;\n        break;\n      case getType(actions.closePanelButtonPressed):\n        draft.infoPanelOpen = false;\n        break;\n      case getType(actions.lessonEdited): {\n        const oldKey = action.payload.oldKey;\n        const newKey = startOfDay(\n          new Date(action.payload.lesson.start)\n        ).toISOString();\n        //remove old lesson\n        draft.lessons[oldKey] = [\n          ...draft.lessons[oldKey].filter(\n            (lesson) => lesson.id !== action.payload.lesson.id\n          ),\n        ];\n\n        draft.lessons[newKey]\n          ? (draft.lessons[newKey] = [\n              ...draft.lessons[newKey],\n              action.payload.lesson,\n            ])\n          : (draft.lessons[newKey] = [action.payload.lesson]);\n\n        if (draft.focussedLesson?.id === action.payload.lesson.id) {\n          draft.focussedLesson = action.payload.lesson;\n        }\n        break;\n      }\n      case getType(actions.popupOpened):\n        draft.popupOpen = true;\n        break;\n      case getType(actions.popupClosed):\n        draft.popupOpen = false;\n        break;\n\n      case getType(actions.updateStartTime): {\n        const lessons =\n          draft.lessons[\n            startOfDay(new Date(action.payload.time)).toISOString()\n          ];\n        const lesson = lessons.find((l) => l.id === action.payload.id);\n        if (lesson) {\n          if (lesson.seriesId) {\n            lesson.seriesId = undefined;\n          }\n          const difference = differenceInMinutes(\n            new Date(lesson.end),\n            new Date(lesson.start)\n          );\n          lesson.start = action.payload.time;\n          lesson.end = addMinutes(\n            new Date(action.payload.time),\n            difference\n          ).toISOString();\n          if (draft.focussedLesson && draft.focussedLesson.id === lesson.id) {\n            draft.focussedLesson = lesson;\n          }\n        }\n\n        break;\n      }\n\n      case getType(actions.seriesDeleted):\n        for (const [key] of Object.entries(draft.lessons)) {\n          draft.lessons[key] = draft.lessons[key].filter(\n            (lesson) => lesson.seriesId !== action.payload\n          );\n          if (!draft.lessons[key].length) delete draft.lessons[key];\n        }\n        if (\n          draft.focussedLesson?.seriesId &&\n          draft.focussedLesson.seriesId === action.payload\n        )\n          draft.focussedLesson = undefined;\n        break;\n    }\n  });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, composeWithDevTools());\n\nexport const persistor = persistStore(store);\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  div::-webkit-scrollbar {\n    height: 0px;\n    width: 0px; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n`;\n","import { getDay } from \"date-fns\";\n\nexport const getDayColour = (day: Date, lessons: number): string => {\n  const dayAsNumber = getDay(day);\n  if ([0, 6].includes(dayAsNumber)) {\n    return `repeating-linear-gradient(\n      135deg,\n      #f8f8f7,\n      #f8f8f7 2px,\n      #efefef 2px,\n      #efefef 4px\n    )`; //sat/sun\n  } else {\n    return lessons === 0\n      ? \"#efefef\"\n      : lessons < 3\n      ? \"#3eb764\"\n      : lessons < 5\n      ? \"#f3ab22\"\n      : \"#f3225a\";\n  }\n};\n","import { getDay } from \"date-fns\";\n\nexport const getDayTextColour = (day: Date, lessons: number): string => {\n  const dayAsNumber = getDay(day);\n  if ([0, 6].includes(dayAsNumber)) {\n    return \"#000\"; //sat/sun\n  } else {\n    return lessons === 0 ? \"#000\" : \"#fff\";\n  }\n};\n","import styled from \"styled-components\";\nimport { getDayColour } from \"../../../helpers/getDayColour\";\nimport { getDayTextColour } from \"../../../helpers/getDayTextColour\";\n\nexport const DayTimelineWrapper = styled.div`\n  display: flex;\n  overflow: auto;\n  min-width: 100%;\n  justify-content: space-between;\n`;\n\nexport const DayWrapper = styled.div.attrs<{\n  isCurrentDay: boolean;\n}>((props) => ({\n  style: { borderBottomColor: props.isCurrentDay ? \"#2296f3\" : \"#e1e1e1\" },\n}))<{ isCurrentDay: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  text-align: center;\n  cursor: pointer;\n  :not(:last-child) {\n    padding-right: 10px;\n  }\n  :not(:first-child) {\n    padding-left: 10px;\n  }\n  border-bottom: 2px solid;\n  margin: 0;\n`;\n\nexport const Day = styled.button.attrs<{\n  isCurrentDay: boolean;\n  day: Date;\n  lessons: number;\n}>((props) => ({\n  style: {\n    background: props.isCurrentDay\n      ? \"#2296f3\"\n      : getDayColour(props.day, props.lessons),\n    color: props.isCurrentDay\n      ? \"#fff\"\n      : getDayTextColour(props.day, props.lessons),\n    boxShadow: props.isCurrentDay ? \"0 4px 8px 0 rgba(0,0,0,0.2)\" : \"none\",\n  },\n}))<{ isCurrentDay: boolean; day: Date; lessons: number }>`\n  display: flex;\n  background: #e1e1e1;\n  padding: 25px;\n  border: none;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const DayText = styled.p`\n  font-size: 0.7em;\n  color: #abb1b6;\n  padding-bottom: 15px;\n`;\n","import React, { createRef } from \"react\";\nimport { getDaysInMonth, addDays, format, startOfDay } from \"date-fns\";\nimport {\n  DayTimelineWrapper,\n  DayWrapper,\n  Day as DayContainer,\n  DayText,\n} from \"./style\";\nimport { actions } from \"../../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../../store\";\n\nexport const DayTimeline: React.FC<{ startOfMonth: string }> = React.memo(\n  ({ startOfMonth }) => {\n    const daysInMonth = getDaysInMonth(new Date(startOfMonth));\n    const days = Array.from(Array(daysInMonth), (_, index) =>\n      addDays(startOfDay(new Date(startOfMonth)), index).toISOString()\n    );\n    return (\n      <DayTimelineWrapper>\n        {days.map((day) => (\n          <Day key={day} day={day} />\n        ))}\n      </DayTimelineWrapper>\n    );\n  }\n);\n\nexport const Day: React.FC<{ day: string }> = React.memo(({ day }) => {\n  const dispatch = useDispatch();\n  const ref = createRef<HTMLDivElement>();\n  const isCurrentDay = useTypedSelector((state) => state.selectedDate === day);\n  const handleClick = () => {\n    dispatch(actions.selectedDayChanged(startOfDay(new Date(day))));\n  };\n\n  const lessons = useTypedSelector(\n    (state) => state.lessons[startOfDay(new Date(day)).toISOString()]\n  );\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (isCurrentDay && ref.current)\n        ref.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\",\n          inline: \"center\",\n        });\n    }, 50);\n  }, [isCurrentDay, ref]);\n  return (\n    <DayWrapper ref={ref} onClick={handleClick} isCurrentDay={isCurrentDay}>\n      <DayContainer\n        isCurrentDay={isCurrentDay}\n        day={new Date(day)}\n        lessons={lessons?.length ? lessons.length : 0}\n      >\n        {format(new Date(day), \"d\")}\n      </DayContainer>\n      <DayText>{format(new Date(day), \"E\")}</DayText>\n    </DayWrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const MonthTimelineWrapper = styled.div`\n  display: flex;\n  overflow: auto;\n  margin: 30px 0;\n  min-width: 100%;\n  justify-content: space-between;\n  font-size: 1.2em;\n`;\n\nexport const MonthWrapper = styled.button.attrs<{\n  isCurrentMonth: boolean;\n}>((props) => ({\n  style: { fontWeight: props.isCurrentMonth ? 800 : 400 },\n}))<{ isCurrentMonth: boolean }>`\n  display: flex;\n  cursor: pointer;\n  font-size: 1.2em;\n  border: none;\n  background: transparent;\n  :not(:last-child) {\n    margin-right: 30px;\n  }\n`;\n","import React, { createRef } from \"react\";\nimport { addMonths, isSameMonth, format } from \"date-fns\";\nimport { MonthTimelineWrapper, MonthWrapper } from \"./style\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../../store/actions\";\nimport { useTypedSelector } from \"../../../store\";\n\nexport const MonthTimeline: React.FC<{\n  startOfYear: string;\n}> = React.memo(({ startOfYear }) => {\n  const months = Array.from(Array(12), (_, index) =>\n    addMonths(new Date(startOfYear), index)\n  );\n  return (\n    <MonthTimelineWrapper>\n      {months.map((month) => (\n        <Month key={month.toISOString()} month={month} />\n      ))}\n    </MonthTimelineWrapper>\n  );\n});\n\nexport const Month: React.FC<{\n  month: Date;\n}> = React.memo(({ month }) => {\n  const dispatch = useDispatch();\n  const isCurrentMonth = useTypedSelector((state) =>\n    isSameMonth(new Date(state.selectedDate), month)\n  );\n\n  const ref = createRef<HTMLButtonElement>();\n\n  const handleClick = () => {\n    dispatch(actions.selectedMonthChanged(month));\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (isCurrentMonth && ref.current)\n        ref.current.scrollIntoView({\n          behavior: \"auto\",\n          block: \"center\",\n          inline: \"center\",\n        });\n    }, 10);\n  }, [isCurrentMonth, ref]);\n  return (\n    <MonthWrapper\n      isCurrentMonth={isCurrentMonth}\n      onClick={handleClick}\n      ref={ref}\n    >\n      {format(month, \"MMMM\")}\n    </MonthWrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  overflow: auto;\n  pointer-events: all;\n`;\n\nexport const Span = styled.div`\n  display: flex;\n  position: relative;\n  pointer-events: none;\n`;\n\nexport const Fade = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 1),\n    rgba(255, 255, 255, 0)\n  );\n`;\n\nexport const RightFade = styled(Fade)`\n  right: 0;\n  background: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 0),\n    rgba(255, 255, 255, 1)\n  );\n`;\n\nexport const BottomFade = styled(Fade)`\n  bottom: 0;\n  border-bottom: 2px solid #e1e1e1;\n`;\n\nexport const BottomRightFade = styled(RightFade)`\n  bottom: 0;\n  border-bottom: 2px solid #e1e1e1;\n`;\n","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n  padding: 30px 20px 0 20px;\n  margin: 0;\n\n  h1,\n  h4 {\n    margin: 0;\n  }\n\n  span {\n    display: flex;\n    select {\n      padding: 0 15px;\n      margin: 0 10px;\n      border-color: #efedea;\n      border-radius: 4px;\n      font-weight: 800;\n    }\n  }\n`;\n\nconst ButtonBase = styled.button`\n  padding: 0 30px;\n  border-radius: 4px;\n  border: none;\n  font-size: 0.7em;\n  font-weight: 800;\n  background: white;\n  border: 1px solid #efedea;\n  margin-left: 10px;\n`;\n\nexport const ResetButton = styled(ButtonBase)`\n  /* background: #dbf4ff; */\n`;\n\nexport const AddButton = styled(ButtonBase)`\n  /* background: #ffce85; */\n`;\n","import styled from \"styled-components\";\nimport { animated } from \"react-spring\";\n\nexport const Wrapper = styled(animated.div)`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  background: rgba(0, 0, 0, 0.6);\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Container = styled(animated.div)`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  position: relative;\n  max-width: 80%;\n  max-height: 80%;\n  align-items: stretch;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex: 1;\n`;\n\nexport const CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  padding: 0;\n`;\n","import { useEffect } from \"react\";\n\nexport function useKeyboardEvent(key: React.Key, callback: () => void) {\n  useEffect(() => {\n    const handler = function (event: KeyboardEvent) {\n      if (event.key === key) {\n        callback();\n      }\n    };\n    window.addEventListener(\"keydown\", handler);\n    return () => {\n      window.removeEventListener(\"keydown\", handler);\n    };\n  }, [callback, key]);\n}\n","export const constants = {\n  animationDuration: 150,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useTransition } from \"react-spring\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Wrapper, Container, Header, CloseButton } from \"./style\";\nimport { useScrollLock } from \"../../hooks/useScrollLock\";\nimport { useKeyboardEvent } from \"../../hooks/useKeyboardEvent\";\nimport { constants } from \"../../constants\";\n\nexport const Popup: React.FC<{\n  isVisible: boolean;\n  onClick: () => void;\n  scrollLock?: boolean;\n}> = React.memo(({ isVisible, onClick, children, scrollLock = false }) => {\n  useScrollLock(isVisible && scrollLock ? true : false);\n  useKeyboardEvent(\"Escape\", () => {\n    if (isVisible) onClick();\n  });\n  const transitions = useTransition(isVisible, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    unique: true,\n    config: { duration: constants.animationDuration },\n  });\n\n  const transitions2 = useTransition(isVisible, null, {\n    from: { transform: \"scale(0)\" },\n    enter: { transform: \"scale(1)\" },\n    leave: { transform: \"scale(0)\" },\n    unique: true,\n    config: { duration: constants.animationDuration },\n  });\n\n  return ReactDOM.createPortal(\n    <>\n      {transitions.map(\n        ({ item, key, props }) =>\n          item && (\n            <Wrapper onClick={onClick} style={props} key={key}>\n              {transitions2.map(\n                ({ item, key, props }) =>\n                  item && (\n                    <Container\n                      key={key}\n                      style={props}\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      <Header>\n                        <CloseButton onClick={onClick}>\n                          <FaTimes />\n                        </CloseButton>\n                      </Header>\n                      {children}\n                    </Container>\n                  )\n              )}\n            </Wrapper>\n          )\n      )}\n    </>,\n    document.body\n  );\n});\n","import { useEffect } from \"react\";\n\nexport function useScrollLock(isLocked: boolean) {\n  useEffect(() => {\n    isLocked\n      ? (document.body.style.overflow = \"hidden\")\n      : (document.body.style.overflow = \"unset\");\n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isLocked]);\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  flex: 1;\n  z-index: 3;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  width: 175px;\n  font-family: Arial, Helvetica, sans-serif;\n  border: 1px solid #e1e1e1;\n  border-radius: 4px;\n  padding: 10px;\n  background: white;\n  position: absolute;\n  right: 0;\n  top: 100%;\n`;\nexport const DayWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 25px);\n  grid-template-rows: repeat(7, 25px);\n  grid-column-gap: 0px;\n  grid-row-gap: 0px;\n  font-size: 0.7em;\n`;\n","import styled from \"styled-components\";\n\ntype WrapperProps = {\n  isSelected: boolean;\n  isDate: boolean;\n};\n\nexport const Wrapper = styled.button.attrs((props: WrapperProps) => ({}))<\n  WrapperProps\n>`\n  display: flex;\n  font-size: 1em;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  background: ${(props) => (props.isSelected ? \"#2296f3\" : \"none\")};\n  color: ${(props) => (props.isSelected ? \"#fff\" : \"#000\")};\n  border-radius: 4px;\n  opacity: ${(props) => (props.isSelected ? 1 : undefined)};\n  :hover {\n    background: ${(props) =>\n      !props.isSelected && props.isDate ? \"rgba(34,150,243, 0.6)\" : undefined};\n    color: ${(props) =>\n      !props.isSelected && props.isDate ? \"#fff\" : undefined};\n  }\n`;\n\ntype DateTextProps = {\n  differentMonth: boolean;\n  isHeading: boolean;\n};\n\nexport const DateText = styled.p.attrs((props: DateTextProps) => ({}))<\n  DateTextProps\n>`\n  opacity: ${(props) => (props.differentMonth && !props.isHeading ? 0.5 : 1)};\n  font-weight: ${(props) => (props.isHeading ? 600 : 0)};\n`;\n","import React from \"react\";\nimport { Wrapper, DateText } from \"./style\";\nimport { format } from \"date-fns\";\n\nexport const Date: React.FC<{\n  heading?: string;\n  date?: Date;\n  onClick?: (date: Date) => void;\n  isSameMonth: boolean;\n  isSelected: boolean;\n}> = React.memo(({ heading, date, onClick, isSelected, isSameMonth }) => {\n  return (\n    <Wrapper\n      isDate={date ? true : false}\n      isSelected={isSelected}\n      onClick={() => (date && onClick ? onClick(date) : void {})}\n    >\n      <DateText\n        isHeading={heading ? true : false}\n        differentMonth={!isSameMonth}\n      >\n        {heading ? heading : date ? format(date, \"d\") : undefined}\n      </DateText>\n    </Wrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0 0 10px 0;\n  align-items: center;\n\n  h4 {\n    margin: 0;\n    padding: 0;\n    font-size: 0.8em;\n    align-self: center;\n  }\n`;\n\nexport const TransparentButton = styled.button`\n  background: transparent;\n  cursor: pointer;\n  border: none;\n  opacity: 0.3;\n  transition: 0.3s;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import React from \"react\";\nimport { Wrapper, TransparentButton } from \"./style\";\nimport { format } from \"date-fns\";\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\n\nexport const Controls: React.FC<{\n  date: Date;\n  left: () => void;\n  right: () => void;\n}> = React.memo(({ date, left, right }) => {\n  return (\n    <Wrapper>\n      <TransparentButton\n        onClick={(e) => {\n          e.preventDefault();\n          left();\n        }}\n      >\n        <FaCaretLeft />\n      </TransparentButton>\n      <h4>{format(date, \"MMMM yyyy\")}</h4>\n      <TransparentButton\n        onClick={(e) => {\n          e.preventDefault();\n          right();\n        }}\n      >\n        <FaCaretRight />\n      </TransparentButton>\n    </Wrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  padding: 10px;\n  background: #fff;\n  border: 1px solid #edebe9;\n  border-radius: 4px;\n  svg {\n    margin-left: 10px;\n  }\n`;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { FaRegCalendarAlt } from \"react-icons/fa\";\nimport { Button } from \"./style\";\n\nexport const DatePickerButton: React.FC<{\n  selectedDate: Date;\n  onClick: () => void;\n}> = React.memo(({ selectedDate, onClick }) => {\n  return (\n    <Button\n      type=\"button\"\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick();\n      }}\n    >\n      {format(selectedDate, \"do MMMM Y\")}\n      <FaRegCalendarAlt />\n    </Button>\n  );\n});\n","import React, { useState, useCallback } from \"react\";\nimport {\n  getDaysInMonth,\n  startOfMonth,\n  getDay,\n  addDays,\n  addMonths,\n  subMonths,\n  endOfMonth,\n  subDays,\n  isSameDay,\n  isSameMonth,\n  startOfDay,\n} from \"date-fns\";\nimport { Wrapper, Container, DayWrapper } from \"./style\";\nimport { Date } from \"./Date\";\nimport { Controls } from \"./Controls\";\nimport { DatePickerButton } from \"./DatePickerButton\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\n\nexport const DatePicker: React.FC<{\n  selectedDate: Date;\n  changeDate: (date: Date) => void;\n  close: () => void;\n  setOpen: (isOpen: boolean) => void;\n  isOpen: boolean;\n  singleClick?: boolean;\n}> = React.memo(\n  ({\n    selectedDate,\n    changeDate,\n    close,\n    setOpen,\n    isOpen,\n    singleClick = false,\n  }) => {\n    const [date, setDate] = useState(startOfDay(selectedDate));\n    const dayHeadings = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n    const padding = getDay(startOfMonth(date));\n    const paddingDays = padding === 0 ? 6 : padding - 1;\n    const daysInMonth = getDaysInMonth(date);\n    const futureDays = 42 - paddingDays - daysInMonth;\n    const handleClick = (day: Date) => {\n      changeDate(day);\n      setDate(startOfDay(day));\n      if (singleClick) close();\n    };\n\n    const ref = React.createRef<HTMLDivElement>();\n    const prevDays = Array(paddingDays)\n      .fill(0)\n      .map((_, i) =>\n        subDays(endOfMonth(subMonths(date, 1)), paddingDays - i - 1)\n      );\n\n    const days = Array(daysInMonth)\n      .fill(1)\n      .map((_, i) => addDays(startOfMonth(date), i));\n\n    const nextDays = Array(futureDays > 0 ? futureDays : 0)\n      .fill(0)\n      .map((_, i) => addDays(startOfMonth(addMonths(date, 1)), i));\n\n    const sameMonth = (day: Date): boolean => {\n      return day && isSameMonth(day, date) ? true : false;\n    };\n\n    useOutsideClick(\n      ref,\n      useCallback(() => {\n        if (isOpen) {\n          close();\n          setDate(startOfDay(selectedDate));\n        }\n      }, [selectedDate, isOpen, close])\n    );\n\n    if (!isOpen && !isSameDay(selectedDate, date))\n      setDate(startOfDay(selectedDate)); // temp fix\n    return (\n      <Wrapper ref={ref}>\n        <DatePickerButton\n          selectedDate={selectedDate}\n          onClick={() => {\n            setOpen(!isOpen);\n          }}\n        />\n        {isOpen && (\n          <Container onClick={(e) => e.stopPropagation()}>\n            <Controls\n              date={date}\n              left={() => setDate(subMonths(date, 1))}\n              right={() => setDate(addMonths(date, 1))}\n            />\n            <DayWrapper>\n              {dayHeadings.map((day, index) => (\n                <Date\n                  key={day + index}\n                  heading={day}\n                  isSelected={false}\n                  isSameMonth={false}\n                />\n              ))}\n              {prevDays.map((day) => (\n                <Date\n                  key={day.toISOString()}\n                  date={day}\n                  onClick={handleClick}\n                  isSelected={isSameDay(day, selectedDate)}\n                  isSameMonth={sameMonth(day)}\n                />\n              ))}\n              {days.map((day) => (\n                <Date\n                  key={day.toISOString()}\n                  date={day}\n                  onClick={handleClick}\n                  isSelected={isSameDay(day, selectedDate)}\n                  isSameMonth={sameMonth(day)}\n                />\n              ))}\n              {nextDays.map((day) => (\n                <Date\n                  key={day.toISOString()}\n                  date={day}\n                  onClick={handleClick}\n                  isSelected={isSameDay(day, selectedDate)}\n                  isSameMonth={sameMonth(day)}\n                />\n              ))}\n            </DayWrapper>\n          </Container>\n        )}\n      </Wrapper>\n    );\n  }\n);\n","import { useEffect } from \"react\";\n\nexport function useOutsideClick(\n  ref: React.MutableRefObject<any>,\n  handler: (event: any) => void\n) {\n  useEffect(() => {\n    const listener = (event: { target: any }) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  margin: 1px;\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n\n  @media only screen and (max-width: 430px) {\n    min-width: 200px;\n  }\n`;\nexport const SeriesContainer = styled.span`\n  display: flex;\n  z-index: 1;\n  div:first-child {\n    margin-right: 5px;\n  }\n  div:last-child {\n    margin-left: 5px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid #edebe9;\n  border-radius: 4px;\n  margin-top: 10px;\n`;\n\nexport const Select = styled.select`\n  background: #fff;\n  padding: 10px;\n  border: 1px solid #edebe9;\n  border-radius: 4px;\n  display: flex;\n  flex: 1;\n  :first-child {\n    margin-right: 5px;\n  }\n  :last-child {\n    margin-left: 5px;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  margin-top: 10px;\n  padding: 10px;\n  border: none;\n  background: #2296f3;\n  color: #fff;\n  border-radius: 4px;\n  :disabled {\n    opacity: 0.4;\n  }\n`;\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 200px;\n  border: 1px solid #eaeaea;\n`;\n\nexport const SeriesSpan = styled.span`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  p,\n  h3 {\n    margin: 0;\n  }\n  p {\n    font-size: 0.9em;\n  }\n  h3 {\n    font-size: 1.1em;\n  }\n\n  :not(:first-child) {\n    margin-top: 10px;\n  }\n`;\n\nexport const SeriesRow = styled.div.attrs((props: { color: string }) => ({}))<{\n  color: string;\n}>`\n  font-size: 0.9em;\n  text-align: left;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n  p {\n    margin: 0;\n  }\n  div {\n    display: flex;\n  }\n  span {\n    background: ${({ color }) => color};\n    width: 5px;\n    height: 100%;\n    margin-right: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background: transparent;\n  padding: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const Select = styled.select`\n  background: #fff;\n  padding: 10px;\n  border: 1px solid #edebe9;\n  border-radius: 4px;\n  display: flex;\n  flex: 1;\n  :first-child {\n    margin-right: 5px;\n  }\n  :last-child {\n    margin-left: 5px;\n  }\n`;\n\nexport const CheckBoxContainer = styled.span`\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font: 400 13.3333px Arial;\n  input:not(:last-child) {\n    margin-right: 10px;\n  }\n  input:last-child {\n    margin-right: 0;\n  }\n`;\n","import React from \"react\";\nimport { getTimeSlots } from \"../../../helpers/getTimeSlots\";\nimport { Select } from \"./style\";\n\nexport const StartEndTime: React.FC<{\n  startTime: string | undefined;\n  endTime: string | undefined;\n  setStartTime: React.Dispatch<React.SetStateAction<string | undefined>>;\n  setEndTime: React.Dispatch<React.SetStateAction<string | undefined>>;\n}> = ({ startTime, endTime, setStartTime, setEndTime }) => {\n  const options = getTimeSlots(15, 8, 17.15);\n  return (\n    <div style={{ display: \"flex\", marginTop: \"10px\" }}>\n      <Select\n        style={{ color: !startTime ? \"#7d7d7d\" : \"#000\" }}\n        value={options.indexOf(startTime)}\n        onChange={(e) => {\n          if (e.target.selectedIndex > 0)\n            setStartTime(options[e.target.selectedIndex - 1]);\n        }}\n      >\n        <option disabled={startTime ? true : false}>Start Time</option>\n        {options\n          .filter((_, index) => index < options.length - 1)\n          .map((option, index) => (\n            <option key={index} value={index}>\n              {option}\n            </option>\n          ))}\n      </Select>\n      <Select\n        style={{ color: !endTime ? \"#7d7d7d\" : \"#000\" }}\n        value={options.indexOf(endTime)}\n        onChange={(e) => {\n          if (e.target.selectedIndex > 0)\n            setEndTime(options[e.target.selectedIndex - 1]);\n        }}\n      >\n        <option disabled={endTime ? true : false}>End Time</option>\n        {options.map((option, index) => (\n          <option key={index} value={index}>\n            {option}\n          </option>\n        ))}\n      </Select>\n    </div>\n  );\n};\n","export const getTimeSlots = (\n  interval: number,\n  startTime: number,\n  endTime: number\n): any[] => {\n  const times = [];\n  let start = startTime * 60;\n\n  for (var i = 0; start < endTime * 60; i++) {\n    var hh = Math.floor(start / 60); // hours of day in 0-24 format\n    var mm = start % 60; // minutes of the hour in 0-55 format\n    times[i] = (\"0\" + hh).slice(-2) + \":\" + (\"0\" + mm).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\n    start = start + interval;\n  }\n\n  return times;\n};\n","import { Class } from \"../../../store/types\";\nimport { useTypedSelector } from \"../../../store\";\nimport { Select } from \"./style\";\nimport React from \"react\";\n\nexport const ClassAndSeriesControls: React.FC<{\n  series: boolean;\n  setSeries: React.Dispatch<React.SetStateAction<boolean>>;\n  classGroup: Class | undefined;\n  setClassGroup: React.Dispatch<React.SetStateAction<Class | undefined>>;\n}> = ({ series, setSeries, classGroup, setClassGroup }) => {\n  const classOptions = useTypedSelector((state) => state.classes);\n  return (\n    <div style={{ display: \"flex\", marginTop: \"10px\", alignItems: \"center\" }}>\n      <Select\n        style={{ color: !classGroup ? \"#7d7d7d\" : \"#000\" }}\n        value={classGroup && classOptions.indexOf(classGroup)}\n        onChange={(e) => {\n          if (e.target.selectedIndex > 0)\n            setClassGroup(classOptions[e.target.selectedIndex - 1]);\n        }}\n      >\n        <option disabled={classGroup ? true : false}>Class</option>\n        {classOptions.map((option, index) => (\n          <option key={index} value={index}>\n            {option.year + option.group}\n          </option>\n        ))}\n      </Select>\n      <span\n        style={{\n          flex: 1,\n          marginLeft: \"5px\",\n          padding: \"10px\",\n          border: \"1px solid transparent\",\n        }}\n      >\n        <label>Series</label>\n        <input\n          type=\"checkbox\"\n          checked={series}\n          onChange={() => setSeries(!series)}\n        />\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CheckBoxContainer } from \"./style\";\n\nexport const MultiCheckbox: React.FC<{\n  checkboxState: {\n    monday: boolean;\n    tuesday: boolean;\n    wednesday: boolean;\n    thursday: boolean;\n    friday: boolean;\n  };\n  setCheckbox: React.Dispatch<\n    React.SetStateAction<{\n      monday: boolean;\n      tuesday: boolean;\n      wednesday: boolean;\n      thursday: boolean;\n      friday: boolean;\n    }>\n  >;\n}> = ({ checkboxState, setCheckbox }) => {\n  return (\n    <CheckBoxContainer>\n      <label>Mon</label>\n      <input\n        type=\"checkbox\"\n        checked={checkboxState.monday}\n        onChange={() =>\n          setCheckbox((checkboxState) => ({\n            ...checkboxState,\n            monday: !checkboxState.monday,\n          }))\n        }\n      />\n\n      <label>Tue</label>\n      <input\n        type=\"checkbox\"\n        checked={checkboxState.tuesday}\n        onChange={() =>\n          setCheckbox((checkboxState) => ({\n            ...checkboxState,\n            tuesday: !checkboxState.tuesday,\n          }))\n        }\n      />\n\n      <label>Wed</label>\n      <input\n        type=\"checkbox\"\n        checked={checkboxState.wednesday}\n        onChange={() =>\n          setCheckbox((checkboxState) => ({\n            ...checkboxState,\n            wednesday: !checkboxState.wednesday,\n          }))\n        }\n      />\n\n      <label>Thu</label>\n      <input\n        type=\"checkbox\"\n        checked={checkboxState.thursday}\n        onChange={() =>\n          setCheckbox((checkboxState) => ({\n            ...checkboxState,\n            thursday: !checkboxState.thursday,\n          }))\n        }\n      />\n\n      <label>Fri</label>\n      <input\n        type=\"checkbox\"\n        checked={checkboxState.friday}\n        onChange={() =>\n          setCheckbox((checkboxState) => ({\n            ...checkboxState,\n            friday: !checkboxState.friday,\n          }))\n        }\n      />\n    </CheckBoxContainer>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { startOfDay, addWeeks } from \"date-fns\";\nimport { Wrapper, Form, Input, SubmitButton, SeriesContainer } from \"./style\";\nimport { Class, Lesson } from \"../../store/types\";\nimport { actions } from \"../../store/actions\";\nimport { DatePicker } from \"../DatePicker\";\nimport { StartEndTime } from \"./Controls/StartEndTime\";\nimport { ClassAndSeriesControls } from \"./Controls/ClassAndSeries\";\nimport { MultiCheckbox } from \"./Controls/MultiCheckbox\";\n\nexport const NewLessonForm: React.FC<{\n  initialDate: string;\n}> = ({ initialDate }) => {\n  const dispatch = useDispatch();\n  const [date, setDate] = useState(new Date(initialDate));\n  const [isOpen, setOpen] = useState(false);\n  const [seriesStartOpen, setSeriesStartOpen] = useState(false);\n  const [seriesEndOpen, setSeriesEndOpen] = useState(false);\n  const [classGroup, setClassGroup] = useState(undefined as undefined | Class);\n  const [startTime, setStartTime] = useState(undefined as undefined | string);\n  const [seriesStart, setSeriesStart] = useState(date);\n  const [seriesEnd, setSeriesEnd] = useState(addWeeks(date, 1));\n  const [series, setSeries] = useState(false);\n  const [endTime, setEndTime] = useState(undefined as undefined | string);\n  const [subject, updateSubject] = useState(\"\");\n  const [checkboxState, setCheckbox] = useState({\n    monday: false,\n    tuesday: false,\n    wednesday: false,\n    thursday: false,\n    friday: false,\n  });\n  return (\n    <Wrapper>\n      <h3 style={{ margin: 0 }}>New Lesson</h3>\n      <img\n        style={{ margin: \"20px\" }}\n        height=\"100px\"\n        src={process.env.PUBLIC_URL + \"/calendar.svg\"}\n        alt=\"New Lesson Icon\"\n      />\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (startTime && endTime && classGroup) {\n            if (!series) {\n              dispatch(\n                actions.newLessonCreated({\n                  id: uuidv4(),\n                  start: new Date(\n                    new Date(date.setHours(parseFloat(startTime))).setMinutes(\n                      parseFloat(startTime.slice(-2))\n                    )\n                  ).toISOString(),\n                  end: new Date(\n                    new Date(date.setHours(parseFloat(endTime))).setMinutes(\n                      parseFloat(endTime.slice(-2))\n                    )\n                  ).toISOString(),\n                  subject,\n                  teacherId: \"01\",\n                  class: classGroup?.id,\n                } as Lesson)\n              );\n            } else {\n              dispatch(\n                actions.newSeriesCreated({\n                  lesson: {\n                    start: new Date(\n                      new Date(date.setHours(parseFloat(startTime))).setMinutes(\n                        parseFloat(startTime.slice(-2))\n                      )\n                    ).toISOString(),\n                    end: new Date(\n                      new Date(date.setHours(parseFloat(endTime))).setMinutes(\n                        parseFloat(endTime.slice(-2))\n                      )\n                    ).toISOString(),\n                    subject,\n                    teacherId: \"01\",\n                    seriesId: uuidv4(),\n                    class: classGroup?.id,\n                  },\n                  series: {\n                    start: seriesStart,\n                    end: seriesEnd,\n                    days: checkboxState,\n                  },\n                })\n              );\n            }\n          }\n        }}\n      >\n        {series ? (\n          <SeriesContainer>\n            <DatePicker\n              close={() => setSeriesStartOpen(false)}\n              setOpen={setSeriesStartOpen}\n              isOpen={seriesStartOpen}\n              changeDate={(date) => setSeriesStart(startOfDay(date))}\n              selectedDate={startOfDay(seriesStart)}\n              singleClick\n            />\n            <DatePicker\n              close={() => setSeriesEndOpen(false)}\n              setOpen={setSeriesEndOpen}\n              isOpen={seriesEndOpen}\n              changeDate={(date) => setSeriesEnd(startOfDay(date))}\n              selectedDate={startOfDay(seriesEnd)}\n              singleClick\n            />\n          </SeriesContainer>\n        ) : (\n          <DatePicker\n            close={() => setOpen(false)}\n            setOpen={setOpen}\n            isOpen={isOpen}\n            changeDate={(date) => setDate(startOfDay(date))}\n            selectedDate={startOfDay(date ? date : new Date(initialDate))}\n            singleClick\n          />\n        )}\n\n        <Input\n          placeholder=\"Subject\"\n          value={subject}\n          onChange={(e) => updateSubject(e.target.value)}\n        ></Input>\n        <StartEndTime\n          startTime={startTime}\n          endTime={endTime}\n          setStartTime={setStartTime}\n          setEndTime={setEndTime}\n        />\n        <ClassAndSeriesControls\n          series={series}\n          setSeries={setSeries}\n          classGroup={classGroup}\n          setClassGroup={setClassGroup}\n        />\n        {series && (\n          <MultiCheckbox\n            setCheckbox={setCheckbox}\n            checkboxState={checkboxState}\n          />\n        )}\n        <SubmitButton\n          disabled={\n            !startTime ||\n            !endTime ||\n            !subject ||\n            !classGroup ||\n            (series && !Object.values(checkboxState).includes(true))\n          }\n          type=\"submit\"\n        >\n          Create\n        </SubmitButton>\n      </Form>\n    </Wrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Header, AddButton, ResetButton } from \"./style\";\nimport { useDispatch } from \"react-redux\";\nimport { Popup } from \"../../Popup\";\nimport { FaUndo, FaPlus } from \"react-icons/fa\";\nimport { DatePicker } from \"../../DatePicker\";\nimport { actions } from \"../../../store/actions\";\nimport { startOfDay, isSameDay } from \"date-fns\";\nimport { useKeyboardEvent } from \"../../../hooks/useKeyboardEvent\";\nimport { useTypedSelector } from \"../../../store\";\nimport { NewLessonForm } from \"../../Forms/NewLessonForm\";\n\nexport const TimelineHeader: React.FC<{\n  selectedDate: string;\n}> = React.memo(({ selectedDate }) => {\n  const dispatch = useDispatch();\n  const [isOpen, setOpen] = useState(false);\n  const [isVisible, setVisibility] = useState(false);\n  const initialDate = useTypedSelector((state) => state.selectedDate);\n  useKeyboardEvent(\"Escape\", () => {\n    setOpen(false);\n  });\n  return (\n    <Header>\n      <Popup\n        isVisible={isVisible}\n        onClick={() => {\n          setVisibility(false);\n          dispatch(actions.popupClosed());\n        }}\n        scrollLock\n      >\n        <NewLessonForm initialDate={initialDate} />\n      </Popup>\n      <h1>Availability</h1>\n      <span>\n        <DatePicker\n          close={() => setOpen(false)}\n          setOpen={setOpen}\n          isOpen={isOpen}\n          changeDate={(date) =>\n            dispatch(actions.selectedDayChanged(startOfDay(new Date(date))))\n          }\n          selectedDate={new Date(selectedDate)}\n        />\n        <ResetButton\n          onClick={() =>\n            !isSameDay(new Date(selectedDate), new Date())\n              ? dispatch(actions.selectedDayChanged(startOfDay(new Date())))\n              : void {}\n          }\n          title=\"Reset date to present\"\n        >\n          <FaUndo />\n        </ResetButton>\n        <AddButton\n          onClick={() => {\n            setVisibility(true);\n            dispatch(actions.popupOpened());\n          }}\n          title=\"Add lesson\"\n        >\n          <FaPlus />\n        </AddButton>\n      </span>\n    </Header>\n  );\n});\n","import React from \"react\";\nimport { DayTimeline } from \"./DayTimeline\";\nimport { MonthTimeline } from \"./MonthTimeline\";\nimport {\n  Wrapper,\n  Span,\n  Fade,\n  RightFade,\n  BottomFade,\n  BottomRightFade,\n} from \"./style\";\nimport { startOfYear, startOfMonth } from \"date-fns\";\nimport { TimelineHeader } from \"./TimelineHeader\";\nimport { useTypedSelector } from \"../../store\";\n\nexport const Timeline = () => {\n  const selectedDate = useTypedSelector((state) => state.selectedDate);\n  const yearStart = startOfYear(new Date(selectedDate)).toISOString();\n  const monthStart = startOfMonth(new Date(selectedDate)).toISOString();\n  return (\n    <>\n      <TimelineHeader selectedDate={selectedDate} />\n      {/* <Span>\n        <Fade /> */}\n      <Wrapper>\n        <MonthTimeline startOfYear={yearStart} />\n      </Wrapper>\n      {/* <RightFade />\n      </Span>\n      <Span>\n        <BottomFade /> */}\n      <Wrapper>\n        <DayTimeline startOfMonth={monthStart} />\n      </Wrapper>\n      {/* <BottomRightFade />\n      </Span> */}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div.attrs<{\n  padding: string;\n}>((props) => ({\n  style: { padding: props.padding },\n}))<{ padding: string }>`\n  display: flex;\n  flex: 1;\n  position: relative;\n  overflow: auto;\n`;\n\nexport const AxisWrapper = styled.div.attrs<{\n  height: string;\n}>((props) => ({\n  style: { height: props.height },\n}))<{ height: string }>`\n  position: relative;\n`;\n\nexport const GridContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex: 1;\n  margin-left: 20px;\n`;\n\nexport const Tick = styled.div.attrs<{\n  transform: string;\n}>((props) => ({\n  style: { transform: props.transform },\n}))<{ transform: string }>`\n  font-size: 0.7em;\n  color: #abb1b6;\n  line-height: 0; /* Line up the *middle* of the number, not its baseline, with its value */\n`;\n\nexport const Rect = styled.rect.attrs<{\n  transform: string;\n}>((props) => ({\n  style: { transform: props.transform },\n}))<{ transform: string }>`\n  position: absolute;\n  width: 100%;\n  border-bottom: 1px dotted #edebe9;\n  line-height: 0; /* Line up the *middle* of the number, not its baseline, with its value */\n`;\n\nexport const LessonWrapper = styled.rect.attrs<{\n  transform: string;\n  height: string;\n  colour: string;\n  smallHeight: boolean;\n}>((props) => ({\n  style: {\n    transform: props.transform,\n    height: props.height,\n    background: props.colour,\n  },\n}))<{\n  transform: string;\n  height: string;\n  colour: string;\n  smallHeight: boolean;\n}>`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  position: absolute;\n  width: calc(100% - 40px);\n  padding: 0 20px;\n  background: #2296f3;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: 0.3s;\n  opacity: 0.8;\n  overflow: hidden;\n  z-index: 1;\n\n  :hover {\n    opacity: 0.9;\n  }\n\n  span {\n    display: flex;\n    flex-direction: ${({ smallHeight }) => (smallHeight ? \"row\" : \"column\")};\n    line-height: 1em;\n\n    h4 {\n      margin-right: ${({ smallHeight }) => (smallHeight ? \"5px\" : \"0\")};\n    }\n  }\n  button {\n    border: none;\n    color: #fff;\n    background: none;\n  }\n`;\n\nexport const SubjectText = styled.h4`\n  margin: 0;\n  font-weight: 600;\n  font-size: 0.8em;\n`;\n\nexport const TimeText = styled.p`\n  margin: 0;\n  font-size: 0.7em;\n`;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { ScaleLinear, ScaleTime } from \"d3\";\nimport { AxisWrapper, Tick } from \"./style\";\n\nexport const Axis: React.FC<{\n  scale: ScaleLinear<number, number> | ScaleTime<number, number>;\n  tickHeight?: number;\n}> = ({ scale, tickHeight = 30 }) => {\n  const height = scale.range()[0];\n\n  const ticks = (\n    scale: ScaleLinear<number, number> | ScaleTime<number, number>,\n    height: number,\n    tickHeight: number\n  ) => {\n    try {\n      const maxNumber = Math.max(Math.floor(height / tickHeight), 1);\n      const ticks: any = scale.ticks(maxNumber);\n      return ticks.length < maxNumber\n        ? ticks\n        : ticks.filter((_: any, i: number) => i % 2 === 0);\n    } catch (error) {\n      return [];\n    }\n  };\n  return (\n    <AxisWrapper height={`${height}px`}>\n      {ticks(scale, height, tickHeight).map((tick: Date) => (\n        <Tick\n          key={tick.toISOString()}\n          transform={`translateY(${scale(tick).toFixed(0)}px)`}\n        >\n          {format(tick, \"kk:mm\")}\n        </Tick>\n      ))}\n    </AxisWrapper>\n  );\n};\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ScaleTime } from \"d3\";\nimport { format, startOfDay, differenceInHours } from \"date-fns\";\nimport { LessonWrapper, SubjectText, TimeText } from \"./style\";\nimport { Lesson as LessonType } from \"../../store/types\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { FaTimes } from \"react-icons/fa\";\n\nexport const Lesson: React.FC<{\n  lesson: LessonType;\n  scale: ScaleTime<number, number>;\n  colour: string;\n  isFocussed: boolean;\n}> = React.memo(({ lesson, scale, colour, isFocussed }) => {\n  const dispatch = useDispatch();\n  const handleClick = (e: React.MouseEvent<SVGRectElement, MouseEvent>) => {\n    dispatch(actions.lessonFocussed(lesson));\n    e.currentTarget.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n    });\n  };\n\n  const [, drag] = useDrag({\n    item: { type: \"*\", id: lesson.id },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.8 : 1,\n    }),\n  });\n\n  const start = new Date(lesson.start);\n  const end = new Date(lesson.end);\n  return (\n    <LessonWrapper\n      tabIndex={0}\n      colour={colour}\n      ref={drag}\n      onClick={handleClick}\n      style={{ zIndex: isFocussed ? 2 : 1 }}\n      height={`${scale(end) - scale(start)}px`}\n      transform={`translateY(${scale(start).toFixed(0)}px)`}\n      smallHeight={differenceInHours(end, start) < 1}\n      key={lesson.id}\n    >\n      <span>\n        <SubjectText>{lesson.subject}</SubjectText>\n        <TimeText>{`${format(start, \"H:mm\")} - ${format(\n          end,\n          \"H:mm\"\n        )}`}</TimeText>\n      </span>\n\n      <button\n        onClick={(e) => {\n          e.stopPropagation();\n          dispatch(\n            actions.lessonDeleted({\n              date: startOfDay(start).toISOString(),\n              id: lesson.id,\n            })\n          );\n        }}\n      >\n        <FaTimes />\n      </button>\n    </LessonWrapper>\n  );\n});\n","import React from \"react\";\nimport { ScaleLinear, ScaleTime } from \"d3\";\nimport { Rect } from \"./style\";\n\nexport const GridLines: React.FC<{\n  scale: ScaleLinear<number, number> | ScaleTime<number, number>;\n  tickHeight?: number;\n}> = ({ scale, tickHeight = 30 }) => {\n  const height = scale.range()[0];\n\n  const ticks = (\n    scale: ScaleLinear<number, number> | ScaleTime<number, number>,\n    height: number,\n    tickHeight: number\n  ) => {\n    try {\n      const maxNumber = Math.max(Math.floor(height / tickHeight), 1);\n      const ticks: any = scale.ticks(maxNumber);\n      return ticks.length < maxNumber\n        ? ticks\n        : ticks.filter((_: any, i: number) => i % 2 === 0);\n    } catch (error) {\n      return [];\n    }\n  };\n  return ticks(scale, height, tickHeight).map((tick: Date) => (\n    <>\n      <Rect\n        key={tick.toISOString()}\n        transform={`translateY(${scale(tick).toFixed(0)}px)`}\n      />\n    </>\n  ));\n};\n","import React, { useState } from \"react\";\nimport { ScaleLinear, ScaleTime } from \"d3\";\nimport { useDrop } from \"react-dnd\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\nexport const DropContainers: React.FC<{\n  scale: ScaleLinear<number, number> | ScaleTime<number, number>;\n  tickHeight?: number;\n}> = ({ scale, tickHeight = 30 }) => {\n  const height = scale.range()[0];\n\n  const ticks = (\n    scale: ScaleLinear<number, number> | ScaleTime<number, number>,\n    height: number,\n    tickHeight: number\n  ) => {\n    try {\n      const maxNumber = Math.max(Math.floor(height / tickHeight), 1);\n      const ticks: any = scale.ticks(maxNumber);\n      return ticks.length < maxNumber\n        ? ticks\n        : ticks.filter((_: any, i: number) => i % 2 === 0);\n    } catch (error) {\n      return [];\n    }\n  };\n  const startHeight = new Date(\"2020-07-20T06:00:00.000Z\");\n  const endHeight = new Date(\"2020-07-20T06:15:00.000Z\");\n  const containerHeight = `${scale(endHeight) - scale(startHeight)}px`;\n  return ticks(scale, height, tickHeight).map((tick: Date) => (\n    <>\n      <DropContainer\n        id={tick.toISOString()}\n        tick={scale(tick)}\n        height={containerHeight}\n      />\n    </>\n  ));\n};\n\nconst DropContainer: React.FC<{\n  id: string;\n  tick: number;\n  height: string;\n}> = ({ id, tick, height }) => {\n  const dispatch = useDispatch();\n  const [borderTop, setBorderTop] = useState(\"none\");\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    drop: (item, monitor) => {\n      const didDrop = monitor.didDrop();\n      if (didDrop) return;\n      if (canDrop)\n        dispatch(\n          actions.updateStartTime({ id: monitor.getItem().id, time: id })\n        );\n    },\n    accept: \"*\",\n    collect: (monitor: { isOver: () => any; canDrop: () => any }) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  if (isOver && borderTop === \"none\")\n    setBorderTop(\"2px solid rgba(34,150,243, 1)\");\n\n  if (!isOver && borderTop !== \"none\") setBorderTop(\"none\");\n  return (\n    <div\n      key={id}\n      ref={drop}\n      style={{\n        position: \"absolute\",\n        transform: `translateY(${tick.toFixed(0)}px)`,\n        height: height,\n        zIndex: 1,\n        width: \"100%\",\n        borderTop,\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { Wrapper, GridContainer } from \"./style\";\nimport { useTypedSelector } from \"../../store\";\nimport { scaleTime } from \"d3\";\nimport { Axis } from \"./Axis\";\n\nimport { Lesson } from \"./Lesson\";\nimport { GridLines } from \"./GridLines\";\nimport { DropContainers } from \"./DropContainers\";\n\nexport const Schedule = () => {\n  const lessons = useTypedSelector(\n    (state) => state.lessons[state.selectedDate]\n  );\n  const focussedLesson = useTypedSelector((state) => state.focussedLesson);\n  const day = useTypedSelector((state) => state.selectedDate);\n  const tickHeight = 35;\n\n  const scale = scaleTime()\n    .range([tickHeight * 15, 0])\n    .domain([\n      new Date(new Date(day).setHours(parseFloat(\"17:00\"))),\n      new Date(new Date(day).setHours(parseFloat(\"08:00\"))),\n    ]);\n\n  return (\n    <Wrapper\n      padding={`${\n        scale(new Date(\"2020-07-20T06:00:00.000Z\")) -\n        scale(new Date(\"2020-07-20T05:00:00.000Z\"))\n      }px 20px`}\n    >\n      <Axis tickHeight={tickHeight} scale={scale} />\n      <GridContainer>\n        <GridLines tickHeight={tickHeight} scale={scale} />\n        <DropContainers tickHeight={tickHeight / 4} scale={scale} />\n        {lessons &&\n          lessons.map((lesson, i) => (\n            <Lesson\n              colour={lesson.color}\n              key={lesson.id}\n              lesson={lesson}\n              scale={scale}\n              isFocussed={focussedLesson?.id === lesson.id ?? false}\n            />\n          ))}\n      </GridContainer>\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { animated } from \"react-spring\";\n\nexport const Wrapper = styled(animated.div).attrs<{\n  background: string | undefined;\n}>((props) => ({\n  style: { background: props.background ? props.background : \"transparent\" },\n}))<{ background: string | undefined }>`\n  display: flex;\n  flex-direction: column;\n  padding: 30px 20px;\n  align-items: center;\n  flex: 1;\n  img {\n    width: 80%;\n  }\n`;\n\nexport const ButtonBar = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\nexport const Section = styled.span`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\nexport const Heading = styled.h2`\n  color: #fff;\n  display: flex;\n  flex: 1;\n  margin: 0;\n  text-align: center;\n  font-size: 1.3em;\n  font-weight: 600;\n`;\n\nexport const SubHeading = styled.p`\n  color: #fff;\n  display: flex;\n  flex: 1;\n  margin: 0;\n  font-weight: 0;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  color: #fff;\n  background: none;\n  display: flex;\n  align-items: center;\n`;\n\nexport const LinkedButton = styled(Button).attrs<{\n  isLinked: string;\n}>((props) => ({}))<{ isLinked: boolean }>`\n  svg {\n    opacity: ${(props) => (props.isLinked ? \"1\" : \"0.6\")};\n  }\n  :hover svg {\n    opacity: 1;\n  }\n`;\n\nexport const CloseButton = styled(Button)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nexport const ButtonSpan = styled.span`\n  display: flex;\n  button,\n  h2 {\n    padding: 0 5px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { startOfDay, format, addWeeks } from \"date-fns\";\nimport { Lesson } from \"../../store/types\";\nimport { actions } from \"../../store/actions\";\nimport { DatePicker } from \"../DatePicker\";\nimport { StartEndTime } from \"./Controls/StartEndTime\";\nimport { useTypedSelector } from \"../../store\";\nimport { ClassAndSeriesControls } from \"./Controls/ClassAndSeries\";\nimport { MultiCheckbox } from \"./Controls/MultiCheckbox\";\nimport { Wrapper, Form, Input, SubmitButton, SeriesContainer } from \"./style\";\n\nexport const EditLessonForm: React.FC<{\n  initialDate: string;\n  lesson: Lesson;\n}> = ({ initialDate, lesson }) => {\n  const dispatch = useDispatch();\n  const classOptions = useTypedSelector((state) => state.classes);\n  const [date, setDate] = useState(new Date(initialDate));\n  const [isOpen, setOpen] = useState(false);\n  const [seriesStartOpen, setSeriesStartOpen] = useState(false);\n  const [seriesEndOpen, setSeriesEndOpen] = useState(false);\n  const [classGroup, setClassGroup] = useState(\n    classOptions.find((c) => c.id === lesson.class)\n  );\n\n  const [startTime, setStartTime] = useState(\n    `${format(new Date(lesson.start), \"HH\")}:${format(\n      new Date(lesson.start),\n      \"mm\"\n    )}` as string | undefined\n  );\n  const [endTime, setEndTime] = useState(\n    `${format(new Date(lesson.end), \"HH\")}:${format(\n      new Date(lesson.end),\n      \"mm\"\n    )}` as string | undefined\n  );\n  const [subject, updateSubject] = useState(lesson.subject);\n  const [series, setSeries] = useState(false);\n  const [seriesStart, setSeriesStart] = useState(date);\n  const [seriesEnd, setSeriesEnd] = useState(addWeeks(date, 1));\n  const [checkboxState, setCheckbox] = useState({\n    monday: false,\n    tuesday: false,\n    wednesday: false,\n    thursday: false,\n    friday: false,\n  });\n  return (\n    <Wrapper>\n      <h3 style={{ margin: 0 }}>Edit Lesson</h3>\n      <img\n        style={{ margin: \"20px\" }}\n        height=\"100px\"\n        src={process.env.PUBLIC_URL + \"/edit_calendar.svg\"}\n        alt=\"Update Lesson Icon\"\n      />\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (startTime && endTime && classGroup) {\n            if (!series) {\n              dispatch(\n                actions.lessonEdited({\n                  lesson: {\n                    id: lesson.id,\n                    start: new Date(\n                      new Date(date.setHours(parseFloat(startTime))).setMinutes(\n                        parseFloat(startTime.slice(-2))\n                      )\n                    ).toISOString(),\n                    end: new Date(\n                      new Date(date.setHours(parseFloat(endTime))).setMinutes(\n                        parseFloat(endTime.slice(-2))\n                      )\n                    ).toISOString(),\n                    subject,\n                    teacherId: \"01\",\n                    color: lesson.color,\n                    class: classGroup.id,\n                  },\n                  oldKey: initialDate,\n                })\n              );\n            } else {\n              dispatch(\n                actions.lessonEditedSeriesAdded({\n                  lesson: {\n                    id: lesson.id,\n                    start: new Date(\n                      new Date(date.setHours(parseFloat(startTime))).setMinutes(\n                        parseFloat(startTime.slice(-2))\n                      )\n                    ).toISOString(),\n                    end: new Date(\n                      new Date(date.setHours(parseFloat(endTime))).setMinutes(\n                        parseFloat(endTime.slice(-2))\n                      )\n                    ).toISOString(),\n                    subject,\n                    teacherId: \"01\",\n                    color: lesson.color,\n                    class: classGroup.id,\n                  },\n                  series: {\n                    start: seriesStart,\n                    end: seriesEnd,\n                    days: checkboxState,\n                  },\n                  oldKey: initialDate,\n                })\n              );\n            }\n          }\n        }}\n      >\n        {series ? (\n          <SeriesContainer>\n            <DatePicker\n              close={() => setSeriesStartOpen(false)}\n              setOpen={setSeriesStartOpen}\n              isOpen={seriesStartOpen}\n              changeDate={(date) => setSeriesStart(startOfDay(date))}\n              selectedDate={startOfDay(seriesStart)}\n              singleClick\n            />\n            <DatePicker\n              close={() => setSeriesEndOpen(false)}\n              setOpen={setSeriesEndOpen}\n              isOpen={seriesEndOpen}\n              changeDate={(date) => setSeriesEnd(startOfDay(date))}\n              selectedDate={startOfDay(seriesEnd)}\n              singleClick\n            />\n          </SeriesContainer>\n        ) : (\n          <DatePicker\n            close={() => setOpen(false)}\n            setOpen={setOpen}\n            isOpen={isOpen}\n            changeDate={(date) => setDate(startOfDay(date))}\n            selectedDate={startOfDay(date ? date : new Date(initialDate))}\n            singleClick\n          />\n        )}\n\n        <Input\n          placeholder=\"Subject\"\n          value={subject}\n          onChange={(e) => updateSubject(e.target.value)}\n        ></Input>\n        <StartEndTime\n          startTime={startTime}\n          endTime={endTime}\n          setStartTime={setStartTime}\n          setEndTime={setEndTime}\n        />\n\n        <ClassAndSeriesControls\n          series={series}\n          setSeries={setSeries}\n          classGroup={classGroup}\n          setClassGroup={setClassGroup}\n        />\n        {series && (\n          <MultiCheckbox\n            setCheckbox={setCheckbox}\n            checkboxState={checkboxState}\n          />\n        )}\n        <SubmitButton\n          disabled={\n            !startTime ||\n            !endTime ||\n            !subject ||\n            !classGroup ||\n            (series && !Object.values(checkboxState).includes(true))\n          }\n          type=\"submit\"\n        >\n          Update\n        </SubmitButton>\n      </Form>\n    </Wrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  List,\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n} from \"react-virtualized\";\nimport { format } from \"date-fns\";\nimport { FaUnlink, FaTimes } from \"react-icons/fa\";\nimport { Lesson } from \"../../store/types\";\nimport { useTypedSelector } from \"../../store\";\nimport {\n  Wrapper,\n  Form,\n  SubmitButton,\n  ListWrapper,\n  SeriesSpan,\n  SeriesRow,\n  Button,\n} from \"./style\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\nexport const SeriesForm: React.FC<{ lesson: Lesson }> = ({ lesson }) => {\n  const dispatch = useDispatch();\n  const lessons = useTypedSelector((state) =>\n    Array.prototype.concat\n      .apply([], Object.values(state.lessons))\n      .filter((l: Lesson) => l.seriesId)\n      .filter((l) => l.seriesId === lesson.seriesId)\n      .sort(function compare(a: Lesson, b: Lesson) {\n        const dateA = new Date(a.start);\n        const dateB = new Date(b.start);\n        return dateA.getTime() - dateB.getTime();\n      })\n  );\n\n  const last: Lesson = lessons\n    .reverse()\n    .find((l: Lesson) => l.seriesId === lesson.seriesId);\n\n  const first: Lesson = lessons\n    .reverse()\n    .find((l: Lesson) => l.seriesId === lesson.seriesId);\n\n  const size = lessons.length;\n\n  const [series, setSeries] = useState(undefined as undefined | Lesson[]);\n\n  const [cache] = useState(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      defaultHeight: 100,\n    })\n  );\n\n  const rowCount = series?.length ?? 0;\n\n  //@ts-ignore\n  const renderRow = ({ index, key, style, parent }) => {\n    return (\n      <>\n        {series && (\n          <CellMeasurer\n            key={key}\n            cache={cache}\n            parent={parent}\n            columnIndex={0}\n            rowIndex={index}\n          >\n            <SeriesRow style={style} tabIndex={0} color={series[index].color}>\n              <div style={{ width: \"50px\" }}>\n                <span />\n                <p>{index + 1}</p>\n              </div>\n              <p>{format(new Date(series[index].start), \"EEEE do MMMM Y\")}</p>\n              <div style={{ flex: 1, justifyContent: \"flex-end\" }}>\n                <Button>\n                  <FaUnlink />\n                </Button>\n                <Button>\n                  <FaTimes />\n                </Button>\n              </div>\n            </SeriesRow>\n          </CellMeasurer>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <Wrapper>\n      <h3 style={{ margin: 0 }}>Series Details</h3>\n      <img\n        style={{ margin: \"20px\" }}\n        height=\"100px\"\n        src={process.env.PUBLIC_URL + \"/link_calendar.svg\"}\n        alt=\"New Lesson Icon\"\n      />\n      <Form onSubmit={(e) => e.preventDefault()}>\n        {last && first && !series && (\n          <>\n            <SeriesSpan>\n              <p>Subject</p>\n              <h3>{lesson.subject}</h3>\n            </SeriesSpan>\n            <SeriesSpan>\n              <p>Series Duration</p>\n              <h3>{`${format(new Date(first.start), \"do MMMM Y\")} - ${format(\n                new Date(last.start),\n                \"do MMM Y\"\n              )}`}</h3>\n            </SeriesSpan>\n            <SeriesSpan>\n              <p>Time</p>\n              <h3>\n                {`${format(new Date(lesson.start!), \"HH:mm\")} - ${format(\n                  new Date(lesson.end),\n                  \"HH:mm\"\n                )}`}\n              </h3>\n            </SeriesSpan>\n            <SeriesSpan style={{ marginBottom: \"10px\" }}>\n              <p>Lessons</p>\n              <h3>{size}</h3>\n            </SeriesSpan>\n          </>\n        )}\n        {series && (\n          <ListWrapper>\n            <AutoSizer>\n              {({ width, height }) => {\n                return (\n                  <List\n                    tabIndex={0}\n                    containerStyle={{ padding: 0, margin: 0 }}\n                    deferredMeasurementCache={cache}\n                    width={width}\n                    height={height}\n                    rowHeight={cache.rowHeight}\n                    rowRenderer={renderRow}\n                    rowCount={rowCount}\n                    overscanRowCount={20}\n                  />\n                );\n              }}\n            </AutoSizer>\n          </ListWrapper>\n        )}\n        {!series ? (\n          <span style={{ display: \"flex\" }}>\n            <SubmitButton\n              type=\"button\"\n              style={{ flex: 1 }}\n              onClick={() => (lessons ? setSeries(lessons) : void {})}\n            >\n              View Lessons\n            </SubmitButton>\n            <SubmitButton\n              type=\"button\"\n              style={{ flex: 1 }}\n              onClick={() => dispatch(actions.seriesDeleted(lesson.seriesId!))}\n            >\n              Delete Series\n            </SubmitButton>\n          </span>\n        ) : (\n          <SubmitButton type=\"button\" onClick={() => setSeries(undefined)}>\n            View Series\n          </SubmitButton>\n        )}\n      </Form>\n    </Wrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTransition } from \"react-spring\";\nimport {\n  Wrapper,\n  ButtonBar,\n  Section,\n  Heading,\n  SubHeading,\n  CloseButton,\n  LinkedButton,\n  Button,\n  ButtonSpan,\n} from \"./style\";\nimport { Lesson } from \"../../store/types\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { constants } from \"../../constants\";\nimport {\n  FaTimes,\n  FaEdit,\n  FaTrash,\n  FaQuestionCircle,\n  FaLink,\n  FaUnlink,\n} from \"react-icons/fa\";\nimport { useKeyboardEvent } from \"../../hooks/useKeyboardEvent\";\nimport { Popup } from \"../Popup\";\nimport { startOfDay, format } from \"date-fns\";\nimport { useTypedSelector } from \"../../store\";\nimport { EditLessonForm } from \"../Forms/EditLessonForm\";\nimport { SeriesForm } from \"../Forms/SeriesForm\";\n\nexport const InformationBar: React.FC<{\n  lesson: Lesson | undefined;\n}> = React.memo(({ lesson }) => {\n  const isOpen = useTypedSelector((state) => state.infoPanelOpen);\n  const color = useTypedSelector((state) => state.infoPanelColor);\n  const [isVisible, setVisibility] = useState(false);\n  const [mode, setMode] = useState(\"edit\" as \"edit\" | \"series\");\n  const transitions = useTransition(isOpen, null, {\n    from: { transform: \"translate(100%)\" },\n    enter: { transform: \"translate(0)\" },\n    leave: { transform: \"translate(100%)\" },\n    unique: true,\n    config: { duration: constants.animationDuration },\n  });\n  const isPopupOpen = useTypedSelector((state) => state.popupOpen);\n\n  useKeyboardEvent(\"Escape\", () => {\n    if (!isPopupOpen) dispatch(actions.closePanelButtonPressed());\n  });\n  const dispatch = useDispatch();\n  const yearGroup = useTypedSelector((state) =>\n    state.classes.find((c) => c.id === lesson?.class)\n  );\n  return (\n    <>\n      <Popup\n        isVisible={isVisible}\n        onClick={() => {\n          setVisibility(false);\n          dispatch(actions.popupClosed());\n        }}\n        scrollLock\n      >\n        {lesson && mode === \"edit\" ? (\n          <EditLessonForm\n            initialDate={startOfDay(new Date(lesson.start)).toISOString()}\n            lesson={lesson}\n          />\n        ) : lesson && mode === \"series\" ? (\n          <SeriesForm lesson={lesson} />\n        ) : null}\n      </Popup>\n\n      {transitions.map(\n        ({ item, key, props }) =>\n          item && (\n            <Wrapper background={color} style={props} key={key}>\n              <CloseButton\n                onClick={() => dispatch(actions.closePanelButtonPressed())}\n              >\n                <FaTimes />\n              </CloseButton>\n              <img\n                src={process.env.PUBLIC_URL + \"/blackboard.svg\"}\n                alt=\"Blackboard Icon\"\n              />\n\n              <ButtonBar>\n                <Button\n                  disabled={!lesson}\n                  onClick={() => {\n                    setVisibility(true);\n                    setMode(\"edit\");\n                    dispatch(actions.popupOpened());\n                  }}\n                >\n                  <FaEdit size=\"22\" />\n                </Button>\n                <LinkedButton\n                  isLinked={lesson?.seriesId ? true : false}\n                  disabled={!lesson || !lesson.seriesId}\n                  onClick={() => {\n                    setVisibility(true);\n                    setMode(\"series\");\n                    dispatch(actions.popupOpened());\n                  }}\n                >\n                  {lesson?.seriesId ? (\n                    <FaLink size=\"22\" />\n                  ) : (\n                    <FaUnlink size=\"22\" />\n                  )}\n                </LinkedButton>\n                <Button\n                  disabled={!lesson}\n                  onClick={() =>\n                    lesson\n                      ? dispatch(\n                          actions.lessonDeleted({\n                            date: startOfDay(\n                              new Date(lesson.start)\n                            ).toISOString(),\n                            id: lesson.id,\n                          })\n                        )\n                      : void {}\n                  }\n                >\n                  <FaTrash size=\"22\" />\n                </Button>\n              </ButtonBar>\n              <Section>\n                <SubHeading>Subject</SubHeading>\n                <Heading>{lesson?.subject ?? \"N/A\"}</Heading>\n              </Section>\n              <Section>\n                <SubHeading>Date</SubHeading>\n                <Heading>\n                  {lesson?.start\n                    ? format(new Date(lesson.start), \"do MMMM Y\")\n                    : \"N/A\"}\n                </Heading>\n              </Section>\n              <Section>\n                <SubHeading>Time</SubHeading>\n                <Heading>\n                  {lesson\n                    ? `${format(new Date(lesson?.start!), \"HH:mm\")} - ${format(\n                        new Date(lesson?.end),\n                        \"HH:mm\"\n                      )}`\n                    : \"N/A\"}\n                </Heading>\n              </Section>\n              <>\n                <Section>\n                  <SubHeading>Year</SubHeading>\n                  <Heading>{yearGroup?.year ?? \"N/A\"}</Heading>\n                </Section>\n                <Section>\n                  <SubHeading>Class</SubHeading>\n                  <ButtonSpan>\n                    <Heading>{yearGroup?.group ?? \"N/A\"}</Heading>\n                  </ButtonSpan>\n                </Section>\n                <Section>\n                  <SubHeading>Students</SubHeading>\n                  <ButtonSpan>\n                    <Heading>{yearGroup?.students.length ?? \"N/A\"}</Heading>\n                    {lesson && lesson.class && (\n                      <Button>\n                        <FaQuestionCircle />\n                      </Button>\n                    )}\n                  </ButtonSpan>\n                </Section>\n              </>\n            </Wrapper>\n          )\n      )}\n    </>\n  );\n});\n","import React from \"react\";\nimport { InformationBar } from \"../../../components/InformationBar\";\nimport { useTypedSelector } from \"../../../store\";\n\nexport const SideBar = () => {\n  const focussedLesson = useTypedSelector((state) => state.focussedLesson);\n\n  return (\n    <>\n      <span style={{ position: \"relative\", display: \"flex\" }}>\n        <InformationBar lesson={focussedLesson} />\n      </span>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Wrapper } from \"./style\";\nimport { Timeline } from \"../../components/Timeline\";\nimport { Schedule } from \"../../components/Schedule\";\nimport { SideBar } from \"./SideBar\";\n\nexport const AvailabilityHandler = () => {\n  return (\n    <>\n      <Wrapper>\n        <Timeline />\n        <Schedule />\n      </Wrapper>\n      <SideBar />\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.nav`\n  background: #2296f3;\n  display: flex;\n  flex-direction: column;\n  padding: 30px 20px;\n\n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  span {\n    display: flex;\n    flex-direction: column;\n  }\n  span a {\n    margin-bottom: 20px;\n  }\n  a {\n    transition: 0.3s;\n  }\n  a:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  color: #fff;\n  opacity: 0.6;\n`;\n","import React from \"react\";\nimport { Wrapper, Link } from \"./style\";\nimport { FaRegCalendarAlt, FaUsers, FaCog } from \"react-icons/fa\";\n\nexport const SideMenu = () => {\n  return (\n    <Wrapper>\n      <ul>\n        <span>\n          <Link exact to=\"/\" activeStyle={{ opacity: \"1\" }}>\n            <FaRegCalendarAlt size=\"32\" />\n          </Link>\n          <Link to=\"/students\" activeStyle={{ opacity: \"1\" }}>\n            <FaUsers size=\"32\" />\n          </Link>\n        </span>\n        <Link to=\"/settings\" activeStyle={{ opacity: \"1\" }}>\n          <FaCog size=\"32\" />\n        </Link>\n      </ul>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { AvailabilityHandler } from \"./handlers/AvailabilityHandler\";\r\nimport { SideMenu } from \"./components/SideMenu\";\r\nimport \"./style.css\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <SideMenu />\r\n      <Route exact path=\"/\" component={AvailabilityHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <App />\r\n      </DndProvider>\r\n    </HashRouter>\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}